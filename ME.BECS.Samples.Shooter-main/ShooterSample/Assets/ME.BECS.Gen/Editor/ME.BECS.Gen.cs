namespace ME.BECS.Editor {
    using BURST = Unity.Burst.BurstCompileAttribute;
    using Unity.Collections;
    using Unity.Collections.LowLevel.Unsafe;
    using UnityEngine.Scripting;
    using Unity.Burst;
    using Unity.Jobs.LowLevel.Unsafe;
    using ME.BECS.Jobs;
    using static Cuts;
    using UnityEditor;
    [UnityEngine.Scripting.PreserveAttribute]
    public static unsafe class AOTBurstHelper {
        [UnityEngine.Scripting.PreserveAttribute]
        public static void AOT() {
            StaticSystemTypes<ME.BECS.Attack.CanFireSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Attack.CanFireSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Attack.CanFireSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Attack.CanFireSystem>(default);
            StaticSystemTypes<ME.BECS.Attack.FireSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Attack.FireSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Attack.FireSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Attack.FireSystem>(default);
            StaticSystemTypes<ME.BECS.Attack.MoveToAttackerSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Attack.MoveToAttackerSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Attack.MoveToAttackerSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Attack.MoveToAttackerSystem>(default);
            StaticSystemTypes<ME.BECS.Attack.ReloadSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Attack.ReloadSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Attack.ReloadSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Attack.ReloadSystem>(default);
            StaticSystemTypes<ME.BECS.Attack.ResetCanFireSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Attack.ResetCanFireSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Attack.ResetCanFireSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Attack.ResetCanFireSystem>(default);
            StaticSystemTypes<ME.BECS.Attack.RotateWhileAttackSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Attack.RotateWhileAttackSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Attack.RotateWhileAttackSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Attack.RotateWhileAttackSystem>(default);
            StaticSystemTypes<ME.BECS.Attack.SearchTargetSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Attack.SearchTargetSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Attack.SearchTargetSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Attack.SearchTargetSystem>(default);
            StaticSystemTypes<ME.BECS.Attack.StopWhileAttackSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Attack.StopWhileAttackSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Attack.StopWhileAttackSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Attack.StopWhileAttackSystem>(default);
            StaticSystemTypes<ME.BECS.Bullets.DestroySystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Bullets.DestroySystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Bullets.DestroySystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Bullets.DestroySystem>(default);
            StaticSystemTypes<ME.BECS.Bullets.FlySystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Bullets.FlySystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Bullets.FlySystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Bullets.FlySystem>(default);
            StaticSystemTypes<ME.BECS.Commands.CommandAttackSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Commands.CommandAttackSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Commands.CommandAttackSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Commands.CommandAttackSystem>(default);
            StaticSystemTypes<ME.BECS.Commands.CommandBuildSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Commands.CommandBuildSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Commands.CommandBuildSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Commands.CommandBuildSystem>(default);
            StaticSystemTypes<ME.BECS.Commands.CommandBuildUpdateSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Commands.CommandBuildUpdateSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Commands.CommandBuildUpdateSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Commands.CommandBuildUpdateSystem>(default);
            StaticSystemTypes<ME.BECS.Commands.CommandMoveSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Commands.CommandMoveSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Commands.CommandMoveSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Commands.CommandMoveSystem>(default);
            StaticSystemTypes<ME.BECS.DestroyWithLifetimeSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.DestroyWithLifetimeSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.DestroyWithLifetimeSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.DestroyWithLifetimeSystem>(default);
            StaticSystemTypes<ME.BECS.DestroyWithTicksSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.DestroyWithTicksSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.DestroyWithTicksSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.DestroyWithTicksSystem>(default);
            StaticSystemTypes<ME.BECS.FogOfWar.CreateSystem>.Validate();
            BurstCompileOnAwake<ME.BECS.FogOfWar.CreateSystem>.MakeMethod(null);
            BurstCompileOnUpdate<ME.BECS.FogOfWar.CreateSystem>.MakeMethod(null);
            BurstCompileOnAwakeNoBurst<ME.BECS.FogOfWar.CreateSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.FogOfWar.CreateSystem>.MakeMethod(null);
            BurstCompileMethod.MakeAwake<ME.BECS.FogOfWar.CreateSystem>(default);
            BurstCompileMethod.MakeUpdate<ME.BECS.FogOfWar.CreateSystem>(default);
            StaticSystemTypes<ME.BECS.FogOfWar.CreateTextureSystem>.Validate();
            BurstCompileOnAwakeNoBurst<ME.BECS.FogOfWar.CreateTextureSystem>.MakeMethod(null);
            BurstCompileOnDestroyNoBurst<ME.BECS.FogOfWar.CreateTextureSystem>.MakeMethod(null);
            StaticSystemTypes<ME.BECS.FogOfWar.DrawGizmosSystem>.Validate();
            BurstCompileOnDrawGizmos<ME.BECS.FogOfWar.DrawGizmosSystem>.MakeMethod(null);
            BurstCompileOnDrawGizmosNoBurst<ME.BECS.FogOfWar.DrawGizmosSystem>.MakeMethod(null);
            BurstCompileMethod.MakeDrawGizmos<ME.BECS.FogOfWar.DrawGizmosSystem>(default);
            StaticSystemTypes<ME.BECS.FogOfWar.QuadTreeQueryFogOfWarSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.FogOfWar.QuadTreeQueryFogOfWarSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.FogOfWar.QuadTreeQueryFogOfWarSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.FogOfWar.QuadTreeQueryFogOfWarSystem>(default);
            StaticSystemTypes<ME.BECS.FogOfWar.ShadowCopySystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.FogOfWar.ShadowCopySystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.FogOfWar.ShadowCopySystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.FogOfWar.ShadowCopySystem>(default);
            StaticSystemTypes<ME.BECS.FogOfWar.ShadowCopyUpdateSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.FogOfWar.ShadowCopyUpdateSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.FogOfWar.ShadowCopyUpdateSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.FogOfWar.ShadowCopyUpdateSystem>(default);
            StaticSystemTypes<ME.BECS.FogOfWar.UpdateSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.FogOfWar.UpdateSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.FogOfWar.UpdateSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.FogOfWar.UpdateSystem>(default);
            StaticSystemTypes<ME.BECS.FogOfWar.UpdateTextureSystem>.Validate();
            BurstCompileOnUpdateNoBurst<ME.BECS.FogOfWar.UpdateTextureSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.FogOfWar.UpdateTextureSystem>(default);
            StaticSystemTypes<ME.BECS.Pathfinding.BuildGraphSystem>.Validate();
            BurstCompileOnAwakeNoBurst<ME.BECS.Pathfinding.BuildGraphSystem>.MakeMethod(null);
            BurstCompileOnDestroyNoBurst<ME.BECS.Pathfinding.BuildGraphSystem>.MakeMethod(null);
            BurstCompileMethod.MakeAwake<ME.BECS.Pathfinding.BuildGraphSystem>(default);
            BurstCompileMethod.MakeDestroy<ME.BECS.Pathfinding.BuildGraphSystem>(default);
            StaticSystemTypes<ME.BECS.Pathfinding.BuildPathSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Pathfinding.BuildPathSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Pathfinding.BuildPathSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Pathfinding.BuildPathSystem>(default);
            StaticSystemTypes<ME.BECS.Pathfinding.DrawGizmosGraphSystem>.Validate();
            BurstCompileOnUpdateNoBurst<ME.BECS.Pathfinding.DrawGizmosGraphSystem>.MakeMethod(null);
            BurstCompileOnDrawGizmosNoBurst<ME.BECS.Pathfinding.DrawGizmosGraphSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Pathfinding.DrawGizmosGraphSystem>(default);
            BurstCompileMethod.MakeDrawGizmos<ME.BECS.Pathfinding.DrawGizmosGraphSystem>(default);
            StaticSystemTypes<ME.BECS.Pathfinding.FollowPathSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Pathfinding.FollowPathSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Pathfinding.FollowPathSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Pathfinding.FollowPathSystem>(default);
            StaticSystemTypes<ME.BECS.Pathfinding.FollowPathWithAvoidanceSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Pathfinding.FollowPathWithAvoidanceSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Pathfinding.FollowPathWithAvoidanceSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Pathfinding.FollowPathWithAvoidanceSystem>(default);
            StaticSystemTypes<ME.BECS.Pathfinding.LookAtSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Pathfinding.LookAtSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Pathfinding.LookAtSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Pathfinding.LookAtSystem>(default);
            StaticSystemTypes<ME.BECS.Pathfinding.ShowBuildingGridSystem>.Validate();
            BurstCompileOnUpdateNoBurst<ME.BECS.Pathfinding.ShowBuildingGridSystem>.MakeMethod(null);
            BurstCompileOnDestroyNoBurst<ME.BECS.Pathfinding.ShowBuildingGridSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Pathfinding.ShowBuildingGridSystem>(default);
            BurstCompileMethod.MakeDestroy<ME.BECS.Pathfinding.ShowBuildingGridSystem>(default);
            StaticSystemTypes<ME.BECS.Pathfinding.UpdateGraphSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Pathfinding.UpdateGraphSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Pathfinding.UpdateGraphSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Pathfinding.UpdateGraphSystem>(default);
            StaticSystemTypes<ME.BECS.Players.PlayersSystem>.Validate();
            BurstCompileOnAwake<ME.BECS.Players.PlayersSystem>.MakeMethod(null);
            BurstCompileOnAwakeNoBurst<ME.BECS.Players.PlayersSystem>.MakeMethod(null);
            BurstCompileMethod.MakeAwake<ME.BECS.Players.PlayersSystem>(default);
            StaticSystemTypes<ME.BECS.QuadTreeInsertSystem>.Validate();
            BurstCompileOnAwake<ME.BECS.QuadTreeInsertSystem>.MakeMethod(null);
            BurstCompileOnUpdate<ME.BECS.QuadTreeInsertSystem>.MakeMethod(null);
            BurstCompileOnDestroy<ME.BECS.QuadTreeInsertSystem>.MakeMethod(null);
            BurstCompileOnAwakeNoBurst<ME.BECS.QuadTreeInsertSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.QuadTreeInsertSystem>.MakeMethod(null);
            BurstCompileOnDestroyNoBurst<ME.BECS.QuadTreeInsertSystem>.MakeMethod(null);
            BurstCompileMethod.MakeAwake<ME.BECS.QuadTreeInsertSystem>(default);
            BurstCompileMethod.MakeUpdate<ME.BECS.QuadTreeInsertSystem>(default);
            BurstCompileMethod.MakeDestroy<ME.BECS.QuadTreeInsertSystem>(default);
            StaticSystemTypes<ME.BECS.QuadTreeQuerySystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.QuadTreeQuerySystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.QuadTreeQuerySystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.QuadTreeQuerySystem>(default);
            StaticSystemTypes<ME.BECS.Transforms.TransformWorldMatrixUpdateSystem>.Validate();
            BurstCompileOnAwake<ME.BECS.Transforms.TransformWorldMatrixUpdateSystem>.MakeMethod(null);
            BurstCompileOnUpdate<ME.BECS.Transforms.TransformWorldMatrixUpdateSystem>.MakeMethod(null);
            BurstCompileOnAwakeNoBurst<ME.BECS.Transforms.TransformWorldMatrixUpdateSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Transforms.TransformWorldMatrixUpdateSystem>.MakeMethod(null);
            BurstCompileMethod.MakeAwake<ME.BECS.Transforms.TransformWorldMatrixUpdateSystem>(default);
            BurstCompileMethod.MakeUpdate<ME.BECS.Transforms.TransformWorldMatrixUpdateSystem>(default);
            StaticSystemTypes<ME.BECS.Units.DestroySystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Units.DestroySystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Units.DestroySystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Units.DestroySystem>(default);
            StaticSystemTypes<ME.BECS.Units.HitSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Units.HitSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Units.HitSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Units.HitSystem>(default);
            StaticSystemTypes<ME.BECS.Units.SteeringSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Units.SteeringSystem>.MakeMethod(null);
            BurstCompileOnDrawGizmos<ME.BECS.Units.SteeringSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Units.SteeringSystem>.MakeMethod(null);
            BurstCompileOnDrawGizmosNoBurst<ME.BECS.Units.SteeringSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Units.SteeringSystem>(default);
            BurstCompileMethod.MakeDrawGizmos<ME.BECS.Units.SteeringSystem>(default);
            StaticSystemTypes<ME.BECS.Units.SteeringWithAvoidanceSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.Units.SteeringWithAvoidanceSystem>.MakeMethod(null);
            BurstCompileOnDrawGizmos<ME.BECS.Units.SteeringWithAvoidanceSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.Units.SteeringWithAvoidanceSystem>.MakeMethod(null);
            BurstCompileOnDrawGizmosNoBurst<ME.BECS.Units.SteeringWithAvoidanceSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.Units.SteeringWithAvoidanceSystem>(default);
            BurstCompileMethod.MakeDrawGizmos<ME.BECS.Units.SteeringWithAvoidanceSystem>(default);
            StaticSystemTypes<ME.BECS.UnitsHealthBars.DrawHealthBarsSystem>.Validate();
            BurstCompileOnUpdate<ME.BECS.UnitsHealthBars.DrawHealthBarsSystem>.MakeMethod(null);
            BurstCompileOnDestroy<ME.BECS.UnitsHealthBars.DrawHealthBarsSystem>.MakeMethod(null);
            BurstCompileOnAwakeNoBurst<ME.BECS.UnitsHealthBars.DrawHealthBarsSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<ME.BECS.UnitsHealthBars.DrawHealthBarsSystem>.MakeMethod(null);
            BurstCompileOnDestroyNoBurst<ME.BECS.UnitsHealthBars.DrawHealthBarsSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<ME.BECS.UnitsHealthBars.DrawHealthBarsSystem>(default);
            BurstCompileMethod.MakeDestroy<ME.BECS.UnitsHealthBars.DrawHealthBarsSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Bullets.BulletsRaycastSystems>.Validate();
            BurstCompileOnUpdate<SampleShooter.Systems.Bullets.BulletsRaycastSystems>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<SampleShooter.Systems.Bullets.BulletsRaycastSystems>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<SampleShooter.Systems.Bullets.BulletsRaycastSystems>(default);
            StaticSystemTypes<SampleShooter.Systems.Camera.CameraInitializeSystem>.Validate();
            BurstCompileOnAwakeNoBurst<SampleShooter.Systems.Camera.CameraInitializeSystem>.MakeMethod(null);
            BurstCompileMethod.MakeAwake<SampleShooter.Systems.Camera.CameraInitializeSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Camera.CameraMoveSystem>.Validate();
            BurstCompileOnUpdate<SampleShooter.Systems.Camera.CameraMoveSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<SampleShooter.Systems.Camera.CameraMoveSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<SampleShooter.Systems.Camera.CameraMoveSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Camera.CameraRayCastSystem>.Validate();
            BurstCompileOnUpdate<SampleShooter.Systems.Camera.CameraRayCastSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<SampleShooter.Systems.Camera.CameraRayCastSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<SampleShooter.Systems.Camera.CameraRayCastSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Input.DestroyInputDirectionComponentSystem>.Validate();
            BurstCompileOnUpdateNoBurst<SampleShooter.Systems.Input.DestroyInputDirectionComponentSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<SampleShooter.Systems.Input.DestroyInputDirectionComponentSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Input.InitInputSystem>.Validate();
            BurstCompileOnAwakeNoBurst<SampleShooter.Systems.Input.InitInputSystem>.MakeMethod(null);
            BurstCompileMethod.MakeAwake<SampleShooter.Systems.Input.InitInputSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Input.ReadInputSystem>.Validate();
            BurstCompileOnUpdateNoBurst<SampleShooter.Systems.Input.ReadInputSystem>.MakeMethod(null);
            BurstCompileOnDestroyNoBurst<SampleShooter.Systems.Input.ReadInputSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<SampleShooter.Systems.Input.ReadInputSystem>(default);
            BurstCompileMethod.MakeDestroy<SampleShooter.Systems.Input.ReadInputSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Level.LevelInitializeSystem>.Validate();
            BurstCompileOnAwakeNoBurst<SampleShooter.Systems.Level.LevelInitializeSystem>.MakeMethod(null);
            BurstCompileMethod.MakeAwake<SampleShooter.Systems.Level.LevelInitializeSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerApplyInputDataSystem>.Validate();
            BurstCompileOnUpdate<SampleShooter.Systems.Player.PlayerApplyInputDataSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<SampleShooter.Systems.Player.PlayerApplyInputDataSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<SampleShooter.Systems.Player.PlayerApplyInputDataSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerInitializeSystem>.Validate();
            BurstCompileOnAwakeNoBurst<SampleShooter.Systems.Player.PlayerInitializeSystem>.MakeMethod(null);
            BurstCompileMethod.MakeAwake<SampleShooter.Systems.Player.PlayerInitializeSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerMoveDirectionSystem>.Validate();
            BurstCompileOnUpdate<SampleShooter.Systems.Player.PlayerMoveDirectionSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<SampleShooter.Systems.Player.PlayerMoveDirectionSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<SampleShooter.Systems.Player.PlayerMoveDirectionSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerRotationToPointerSystem>.Validate();
            BurstCompileOnUpdate<SampleShooter.Systems.Player.PlayerRotationToPointerSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<SampleShooter.Systems.Player.PlayerRotationToPointerSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<SampleShooter.Systems.Player.PlayerRotationToPointerSystem>(default);
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerShootSystem>.Validate();
            BurstCompileOnUpdate<SampleShooter.Systems.Player.PlayerShootSystem>.MakeMethod(null);
            BurstCompileOnUpdateNoBurst<SampleShooter.Systems.Player.PlayerShootSystem>.MakeMethod(null);
            BurstCompileMethod.MakeUpdate<SampleShooter.Systems.Player.PlayerShootSystem>(default);
            StaticTypes<ME.BECS.Attack.AttackComponent>.AOT();
            StaticTypes<ME.BECS.Attack.AttackFilterComponent>.AOT();
            StaticTypes<ME.BECS.Attack.AttackRuntimeFireComponent>.AOT();
            StaticTypes<ME.BECS.Attack.AttackRuntimeReloadComponent>.AOT();
            StaticTypes<ME.BECS.Attack.AttackTargetComponent>.AOT();
            StaticTypes<ME.BECS.Attack.CanFireComponent>.AOT();
            StaticTypes<ME.BECS.Attack.CanFireWhileMovesTag>.AOT();
            StaticTypes<ME.BECS.Attack.FireUsedComponent>.AOT();
            StaticTypes<ME.BECS.Attack.OnFireEvent>.AOT();
            StaticTypes<ME.BECS.Attack.ReloadedComponent>.AOT();
            StaticTypes<ME.BECS.Attack.RotateAttackSensorComponent>.AOT();
            StaticTypes<ME.BECS.Attack.RotateToAttackWhileIdleComponent>.AOT();
            StaticTypes<ME.BECS.Bullets.BulletConfigComponent>.AOT();
            StaticTypes<ME.BECS.Bullets.BulletRuntimeComponent>.AOT();
            StaticTypes<ME.BECS.Bullets.FirePointComponent>.AOT();
            StaticTypes<ME.BECS.Bullets.TargetReachedComponent>.AOT();
            StaticTypes<ME.BECS.Commands.BuildingInProgress>.AOT();
            StaticTypes<ME.BECS.Commands.BuildInProgress>.AOT();
            StaticTypes<ME.BECS.Commands.CommandAttack>.AOT();
            StaticTypes<ME.BECS.Commands.CommandBuild>.AOT();
            StaticTypes<ME.BECS.Commands.CommandMove>.AOT();
            StaticTypes<ME.BECS.Commands.UnitAttackCommandComponent>.AOT();
            StaticTypes<ME.BECS.DestroyWithLifetime>.AOT();
            StaticTypes<ME.BECS.DestroyWithTicks>.AOT();
            StaticTypes<ME.BECS.Effects.EffectComponent>.AOT();
            StaticTypes<ME.BECS.EntityConfigComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarHasShadowCopyComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsPartialTag>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsRangeTag>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsRectTag>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsSectorTag>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerPartialComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarSectorRevealerComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyPointsComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyRequiredComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyWasVisibleAnytimeTag>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyWasVisibleTag>.AOT();
            StaticTypes<ME.BECS.FogOfWar.FogOfWarStaticComponent>.AOT();
            StaticTypes<ME.BECS.FogOfWar.QuadTreeQueryFogOfWarFilter>.AOT();
            StaticTypes<ME.BECS.IsInactive>.AOT();
            StaticTypes<ME.BECS.Pathfinding.AgentComponent>.AOT();
            StaticTypes<ME.BECS.Pathfinding.GraphMaskComponent>.AOT();
            StaticTypes<ME.BECS.Pathfinding.GraphMaskRuntimeComponent>.AOT();
            StaticTypes<ME.BECS.Pathfinding.IsGraphMaskDirtyComponent>.AOT();
            StaticTypes<ME.BECS.Pathfinding.IsShowGridComponent>.AOT();
            StaticTypes<ME.BECS.Pathfinding.PlaceholderInvalidTagComponent>.AOT();
            StaticTypes<ME.BECS.Pathfinding.RootGraphComponent>.AOT();
            StaticTypes<ME.BECS.Pathfinding.TargetComponent>.AOT();
            StaticTypes<ME.BECS.Pathfinding.TargetInfoComponent>.AOT();
            StaticTypes<ME.BECS.Pathfinding.TargetPathComponent>.AOT();
            StaticTypes<ME.BECS.Players.IsPlayerDefeatTag>.AOT();
            StaticTypes<ME.BECS.Players.IsPlayerVictoryTag>.AOT();
            StaticTypes<ME.BECS.Players.OwnerChangedEvent>.AOT();
            StaticTypes<ME.BECS.Players.OwnerComponent>.AOT();
            StaticTypes<ME.BECS.Players.PlayerComponent>.AOT();
            StaticTypes<ME.BECS.Players.PlayerCurrentSelection>.AOT();
            StaticTypes<ME.BECS.Players.TeamComponent>.AOT();
            StaticTypes<ME.BECS.QuadTreeElement>.AOT();
            StaticTypes<ME.BECS.QuadTreeQuery>.AOT();
            StaticTypes<ME.BECS.QuadTreeQueryHasCustomFilterTag>.AOT();
            StaticTypes<ME.BECS.QuadTreeResult>.AOT();
            StaticTypes<ME.BECS.TNull>.AOT();
            StaticTypes<ME.BECS.Transforms.ChildrenComponent>.AOT();
            StaticTypes<ME.BECS.Transforms.IsFirstLevelComponent>.AOT();
            StaticTypes<ME.BECS.Transforms.LocalPositionComponent>.AOT();
            StaticTypes<ME.BECS.Transforms.LocalRotationComponent>.AOT();
            StaticTypes<ME.BECS.Transforms.LocalScaleComponent>.AOT();
            StaticTypes<ME.BECS.Transforms.ParentComponent>.AOT();
            StaticTypes<ME.BECS.Transforms.WorldMatrixComponent>.AOT();
            StaticTypes<ME.BECS.UI.UIComponent>.AOT();
            StaticTypes<ME.BECS.Units.CommandGroupComponent>.AOT();
            StaticTypes<ME.BECS.Units.DamageTookComponent>.AOT();
            StaticTypes<ME.BECS.Units.DamageTookEvent>.AOT();
            StaticTypes<ME.BECS.Units.IsCommandGroupDirty>.AOT();
            StaticTypes<ME.BECS.Units.IsUnitStaticComponent>.AOT();
            StaticTypes<ME.BECS.Units.NavAgentComponent>.AOT();
            StaticTypes<ME.BECS.Units.NavAgentRuntimeComponent>.AOT();
            StaticTypes<ME.BECS.Units.NavAgentRuntimeSpeedComponent>.AOT();
            StaticTypes<ME.BECS.Units.PathFollowComponent>.AOT();
            StaticTypes<ME.BECS.Units.SelectionGroupComponent>.AOT();
            StaticTypes<ME.BECS.Units.TimeToBuildComponent>.AOT();
            StaticTypes<ME.BECS.Units.UnitBelongsToComponent>.AOT();
            StaticTypes<ME.BECS.Units.UnitCommandGroupComponent>.AOT();
            StaticTypes<ME.BECS.Units.UnitHealthComponent>.AOT();
            StaticTypes<ME.BECS.Units.UnitHoldComponent>.AOT();
            StaticTypes<ME.BECS.Units.UnitIsDeadTag>.AOT();
            StaticTypes<ME.BECS.Units.UnitLookAtComponent>.AOT();
            StaticTypes<ME.BECS.Units.UnitQuadSizeComponent>.AOT();
            StaticTypes<ME.BECS.Units.UnitSelectionGroupComponent>.AOT();
            StaticTypes<ME.BECS.Views.AssignViewComponent>.AOT();
            StaticTypes<ME.BECS.Views.CameraComponent>.AOT();
            StaticTypes<ME.BECS.Views.DrawMeshProviderTag>.AOT();
            StaticTypes<ME.BECS.Views.EntityViewProviderTag>.AOT();
            StaticTypes<ME.BECS.Views.InstantiateAvatarViewComponent>.AOT();
            StaticTypes<ME.BECS.Views.InstantiateViewComponent>.AOT();
            StaticTypes<ME.BECS.Views.IsViewRequested>.AOT();
            StaticTypes<ME.BECS.Views.MeshFilterComponent>.AOT();
            StaticTypes<ME.BECS.Views.MeshRendererComponent>.AOT();
            StaticTypes<ME.BECS.Views.ViewComponent>.AOT();
            StaticTypes<ME.BECS.Views.ViewCustomIdComponent>.AOT();
            StaticTypes<SampleShooter.Components.Bullets.BulletComponent>.AOT();
            StaticTypes<SampleShooter.Components.Camera.CameraComponent>.AOT();
            StaticTypes<SampleShooter.Components.Camera.CameraFollowSpeedComponent>.AOT();
            StaticTypes<SampleShooter.Components.Camera.CameraPositionOffsetComponent>.AOT();
            StaticTypes<SampleShooter.Components.Camera.CameraRayComponent>.AOT();
            StaticTypes<SampleShooter.Components.Camera.CameraRotationOffsetComponent>.AOT();
            StaticTypes<SampleShooter.Components.Camera.CameraSmoothTimeComponent>.AOT();
            StaticTypes<SampleShooter.Components.Camera.CameraTypeComponent>.AOT();
            StaticTypes<SampleShooter.Components.Camera.CameraVelocityComponent>.AOT();
            StaticTypes<SampleShooter.Components.Input.InputComponent>.AOT();
            StaticTypes<SampleShooter.Components.Input.InputDirection>.AOT();
            StaticTypes<SampleShooter.Components.Level.LevelComponent>.AOT();
            StaticTypes<SampleShooter.Components.Level.LevelEnemySpawnPointComponent>.AOT();
            StaticTypes<SampleShooter.Components.Level.LevelIdComponent>.AOT();
            StaticTypes<SampleShooter.Components.Level.LevelPlayerSpawnPointComponent>.AOT();
            StaticTypes<SampleShooter.Components.Level.LevelQuadTreeComponent>.AOT();
            StaticTypes<SampleShooter.Components.Level.LevelQuadTreeIndexComponent>.AOT();
            StaticTypes<SampleShooter.Components.Level.LevelSpawnPointComponent>.AOT();
            StaticTypes<SampleShooter.Components.Player.PlayerCanShootComponent>.AOT();
            StaticTypes<SampleShooter.Components.Player.PlayerMoveDirectionComponent>.AOT();
            StaticTypes<SampleShooter.Components.Player.PlayerMoveSpeedComponent>.AOT();
            StaticTypes<SampleShooter.Components.Player.PlayerMuzzlePositionComponent>.AOT();
            StaticTypes<SampleShooter.Components.Player.PlayerQuadTreeComponent>.AOT();
            StaticTypes<SampleShooter.Components.Player.PlayerShootingRangeComponent>.AOT();
            StaticTypes<SampleShooter.Components.Player.PlayersQuadTreeIndexComponent>.AOT();
            AutoDestroyRegistryStatic<ME.BECS.Pathfinding.GraphMaskRuntimeComponent>.Destroy(null);
            StaticTypesStatic<ME.BECS.Bullets.BulletEffectOnDestroy>.AOT();
            StaticTypesStatic<ME.BECS.Bullets.BulletViewPoint>.AOT();
            StaticTypesStatic<ME.BECS.Units.UnitEffectOnDestroyComponent>.AOT();
            StaticTypesStatic<ME.BECS.Units.UnitEffectOnHitComponent>.AOT();
            StaticTypesStatic<ME.BECS.Views.InstantiateAvatarViewComponent>.AOT();
            StaticTypesStatic<ME.BECS.Views.InstantiateViewComponent>.AOT();
            ConfigInitializeTypes<ME.BECS.Attack.AttackComponent>.AOT();
            ConfigInitializeTypes<ME.BECS.Pathfinding.GraphMaskComponent>.AOT();
            ConfigInitializeTypes<ME.BECS.Views.InstantiateAvatarViewComponent>.AOT();
            ConfigInitializeTypes<ME.BECS.Views.InstantiateViewComponent>.AOT();
        }
    }
    public static unsafe class StaticTypesInitializer {
        [UnityEngine.Scripting.PreserveAttribute]
        public static void Load() {
            JobUtils.Initialize();
            StaticSystemTypes<ME.BECS.Attack.CanFireSystem>.Validate();
            StaticSystemTypes<ME.BECS.Attack.FireSystem>.Validate();
            StaticSystemTypes<ME.BECS.Attack.MoveToAttackerSystem>.Validate();
            StaticSystemTypes<ME.BECS.Attack.ReloadSystem>.Validate();
            StaticSystemTypes<ME.BECS.Attack.ResetCanFireSystem>.Validate();
            StaticSystemTypes<ME.BECS.Attack.RotateWhileAttackSystem>.Validate();
            StaticSystemTypes<ME.BECS.Attack.SearchTargetSystem>.Validate();
            StaticSystemTypes<ME.BECS.Attack.StopWhileAttackSystem>.Validate();
            StaticSystemTypes<ME.BECS.Bullets.DestroySystem>.Validate();
            StaticSystemTypes<ME.BECS.Bullets.FlySystem>.Validate();
            StaticSystemTypes<ME.BECS.Commands.CommandAttackSystem>.Validate();
            StaticSystemTypes<ME.BECS.Commands.CommandBuildSystem>.Validate();
            StaticSystemTypes<ME.BECS.Commands.CommandBuildUpdateSystem>.Validate();
            StaticSystemTypes<ME.BECS.Commands.CommandMoveSystem>.Validate();
            StaticSystemTypes<ME.BECS.DestroyWithLifetimeSystem>.Validate();
            StaticSystemTypes<ME.BECS.DestroyWithTicksSystem>.Validate();
            StaticSystemTypes<ME.BECS.FogOfWar.CreateSystem>.Validate();
            StaticSystemTypes<ME.BECS.FogOfWar.CreateTextureSystem>.Validate();
            StaticSystemTypes<ME.BECS.FogOfWar.DrawGizmosSystem>.Validate();
            StaticSystemTypes<ME.BECS.FogOfWar.QuadTreeQueryFogOfWarSystem>.Validate();
            StaticSystemTypes<ME.BECS.FogOfWar.ShadowCopySystem>.Validate();
            StaticSystemTypes<ME.BECS.FogOfWar.ShadowCopyUpdateSystem>.Validate();
            StaticSystemTypes<ME.BECS.FogOfWar.UpdateSystem>.Validate();
            StaticSystemTypes<ME.BECS.FogOfWar.UpdateTextureSystem>.Validate();
            StaticSystemTypes<ME.BECS.Pathfinding.BuildGraphSystem>.Validate();
            StaticSystemTypes<ME.BECS.Pathfinding.BuildPathSystem>.Validate();
            StaticSystemTypes<ME.BECS.Pathfinding.DrawGizmosGraphSystem>.Validate();
            StaticSystemTypes<ME.BECS.Pathfinding.FollowPathSystem>.Validate();
            StaticSystemTypes<ME.BECS.Pathfinding.FollowPathWithAvoidanceSystem>.Validate();
            StaticSystemTypes<ME.BECS.Pathfinding.LookAtSystem>.Validate();
            StaticSystemTypes<ME.BECS.Pathfinding.ShowBuildingGridSystem>.Validate();
            StaticSystemTypes<ME.BECS.Pathfinding.UpdateGraphSystem>.Validate();
            StaticSystemTypes<ME.BECS.Players.PlayersSystem>.Validate();
            StaticSystemTypes<ME.BECS.QuadTreeInsertSystem>.Validate();
            StaticSystemTypes<ME.BECS.QuadTreeQuerySystem>.Validate();
            StaticSystemTypes<ME.BECS.Transforms.TransformWorldMatrixUpdateSystem>.Validate();
            StaticSystemTypes<ME.BECS.Units.DestroySystem>.Validate();
            StaticSystemTypes<ME.BECS.Units.HitSystem>.Validate();
            StaticSystemTypes<ME.BECS.Units.SteeringSystem>.Validate();
            StaticSystemTypes<ME.BECS.Units.SteeringWithAvoidanceSystem>.Validate();
            StaticSystemTypes<ME.BECS.UnitsHealthBars.DrawHealthBarsSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Bullets.BulletsRaycastSystems>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Camera.CameraInitializeSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Camera.CameraMoveSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Camera.CameraRayCastSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Input.DestroyInputDirectionComponentSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Input.InitInputSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Input.ReadInputSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Level.LevelInitializeSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerApplyInputDataSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerInitializeSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerMoveDirectionSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerRotationToPointerSystem>.Validate();
            StaticSystemTypes<SampleShooter.Systems.Player.PlayerShootSystem>.Validate();
            StaticTypes<ME.BECS.Commands.BuildingInProgress>.ApplyGroup(typeof(ME.BECS.Commands.CommandComponentsGroup));
            StaticTypes<ME.BECS.Commands.BuildInProgress>.ApplyGroup(typeof(ME.BECS.Commands.CommandComponentsGroup));
            StaticTypes<ME.BECS.Commands.CommandAttack>.ApplyGroup(typeof(ME.BECS.Commands.CommandComponentsGroup));
            StaticTypes<ME.BECS.Commands.CommandBuild>.ApplyGroup(typeof(ME.BECS.Commands.CommandComponentsGroup));
            StaticTypes<ME.BECS.Commands.CommandMove>.ApplyGroup(typeof(ME.BECS.Commands.CommandComponentsGroup));
            StaticTypes<ME.BECS.Commands.UnitAttackCommandComponent>.ApplyGroup(typeof(ME.BECS.Commands.CommandComponentsGroup));
            StaticTypes<ME.BECS.DestroyWithLifetime>.ApplyGroup(typeof(ME.BECS.DestroyComponentGroup));
            StaticTypes<ME.BECS.DestroyWithTicks>.ApplyGroup(typeof(ME.BECS.DestroyComponentGroup));
            StaticTypes<ME.BECS.Effects.EffectComponent>.ApplyGroup(typeof(ME.BECS.Effects.EffectComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarComponent>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarHasShadowCopyComponent>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerComponent>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsPartialTag>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsRangeTag>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsRectTag>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsSectorTag>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerPartialComponent>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarSectorRevealerComponent>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyComponent>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyPointsComponent>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyRequiredComponent>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyWasVisibleAnytimeTag>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyWasVisibleTag>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.FogOfWar.FogOfWarStaticComponent>.ApplyGroup(typeof(ME.BECS.FogOfWar.FogOfWarComponentGroup));
            StaticTypes<ME.BECS.Players.OwnerComponent>.ApplyGroup(typeof(ME.BECS.Players.UnitOwnerComponentGroup));
            StaticTypes<ME.BECS.Transforms.ChildrenComponent>.ApplyGroup(typeof(ME.BECS.Transforms.TransformComponentGroup));
            StaticTypes<ME.BECS.Transforms.IsFirstLevelComponent>.ApplyGroup(typeof(ME.BECS.Transforms.TransformComponentGroup));
            StaticTypes<ME.BECS.Transforms.LocalPositionComponent>.ApplyGroup(typeof(ME.BECS.Transforms.TransformComponentGroup));
            StaticTypes<ME.BECS.Transforms.LocalRotationComponent>.ApplyGroup(typeof(ME.BECS.Transforms.TransformComponentGroup));
            StaticTypes<ME.BECS.Transforms.LocalScaleComponent>.ApplyGroup(typeof(ME.BECS.Transforms.TransformComponentGroup));
            StaticTypes<ME.BECS.Transforms.ParentComponent>.ApplyGroup(typeof(ME.BECS.Transforms.TransformComponentGroup));
            StaticTypes<ME.BECS.Transforms.WorldMatrixComponent>.ApplyGroup(typeof(ME.BECS.Transforms.TransformComponentGroup));
            StaticTypes<ME.BECS.Units.CommandGroupComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.DamageTookComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.DamageTookEvent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.IsCommandGroupDirty>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.IsUnitStaticComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.NavAgentComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.NavAgentRuntimeComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.NavAgentRuntimeSpeedComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.PathFollowComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.SelectionGroupComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.TimeToBuildComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitBelongsToComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitCommandGroupComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitEffectOnDestroyComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitEffectOnHitComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitHealthComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitHoldComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitIsDeadTag>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitLookAtComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitQuadSizeComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Units.UnitSelectionGroupComponent>.ApplyGroup(typeof(ME.BECS.Units.UnitComponentGroup));
            StaticTypes<ME.BECS.Views.AssignViewComponent>.ApplyGroup(typeof(ME.BECS.Views.ViewsComponentGroup));
            StaticTypes<ME.BECS.Views.InstantiateAvatarViewComponent>.ApplyGroup(typeof(ME.BECS.Views.ViewsComponentGroup));
            StaticTypes<ME.BECS.Views.InstantiateViewComponent>.ApplyGroup(typeof(ME.BECS.Views.ViewsComponentGroup));
            StaticTypes<ME.BECS.Views.IsViewRequested>.ApplyGroup(typeof(ME.BECS.Views.ViewsComponentGroup));
            StaticTypes<ME.BECS.Views.MeshFilterComponent>.ApplyGroup(typeof(ME.BECS.Views.ViewsComponentGroup));
            StaticTypes<ME.BECS.Views.MeshRendererComponent>.ApplyGroup(typeof(ME.BECS.Views.ViewsComponentGroup));
            StaticTypes<ME.BECS.Views.ViewComponent>.ApplyGroup(typeof(ME.BECS.Views.ViewsComponentGroup));
            StaticTypes<ME.BECS.Views.ViewCustomIdComponent>.ApplyGroup(typeof(ME.BECS.Views.ViewsComponentGroup));
            StaticTypes<ME.BECS.Attack.AttackComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Attack.AttackComponent>.SetDefaultValue(ME.BECS.Attack.AttackComponent.Default);
            StaticTypes<ME.BECS.Attack.AttackFilterComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Attack.AttackRuntimeFireComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Attack.AttackRuntimeReloadComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Attack.AttackTargetComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Attack.CanFireComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Attack.CanFireWhileMovesTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.Attack.FireUsedComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Attack.OnFireEvent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Attack.ReloadedComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Attack.RotateAttackSensorComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Attack.RotateAttackSensorComponent>.SetDefaultValue(ME.BECS.Attack.RotateAttackSensorComponent.Default);
            StaticTypes<ME.BECS.Attack.RotateToAttackWhileIdleComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Bullets.BulletConfigComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Bullets.BulletRuntimeComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Bullets.FirePointComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Bullets.TargetReachedComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Commands.BuildingInProgress>.Validate(isTag: false);
            StaticTypes<ME.BECS.Commands.BuildInProgress>.Validate(isTag: false);
            StaticTypes<ME.BECS.Commands.CommandAttack>.Validate(isTag: false);
            StaticTypes<ME.BECS.Commands.CommandBuild>.Validate(isTag: false);
            StaticTypes<ME.BECS.Commands.CommandMove>.Validate(isTag: false);
            StaticTypes<ME.BECS.Commands.UnitAttackCommandComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.DestroyWithLifetime>.Validate(isTag: false);
            StaticTypes<ME.BECS.DestroyWithTicks>.Validate(isTag: false);
            StaticTypes<ME.BECS.Effects.EffectComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.EntityConfigComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarHasShadowCopyComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsPartialTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsRangeTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsRectTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerIsSectorTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarRevealerPartialComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarSectorRevealerComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyPointsComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyRequiredComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyWasVisibleAnytimeTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarShadowCopyWasVisibleTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.FogOfWar.FogOfWarStaticComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.FogOfWar.QuadTreeQueryFogOfWarFilter>.Validate(isTag: false);
            StaticTypes<ME.BECS.IsInactive>.Validate(isTag: true);
            StaticTypes<ME.BECS.Pathfinding.AgentComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Pathfinding.GraphMaskComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Pathfinding.GraphMaskRuntimeComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Pathfinding.IsGraphMaskDirtyComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Pathfinding.IsShowGridComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Pathfinding.PlaceholderInvalidTagComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Pathfinding.RootGraphComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Pathfinding.TargetComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Pathfinding.TargetInfoComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Pathfinding.TargetPathComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Players.IsPlayerDefeatTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.Players.IsPlayerVictoryTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.Players.OwnerChangedEvent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Players.OwnerComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Players.PlayerComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Players.PlayerCurrentSelection>.Validate(isTag: false);
            StaticTypes<ME.BECS.Players.TeamComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.QuadTreeElement>.Validate(isTag: false);
            StaticTypes<ME.BECS.QuadTreeQuery>.Validate(isTag: false);
            StaticTypes<ME.BECS.QuadTreeQueryHasCustomFilterTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.QuadTreeResult>.Validate(isTag: false);
            StaticTypes<ME.BECS.TNull>.Validate(isTag: true);
            StaticTypes<ME.BECS.Transforms.ChildrenComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Transforms.IsFirstLevelComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Transforms.LocalPositionComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Transforms.LocalRotationComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Transforms.LocalRotationComponent>.SetDefaultValue(ME.BECS.Transforms.LocalRotationComponent.Default);
            StaticTypes<ME.BECS.Transforms.LocalScaleComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Transforms.LocalScaleComponent>.SetDefaultValue(ME.BECS.Transforms.LocalScaleComponent.Default);
            StaticTypes<ME.BECS.Transforms.ParentComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Transforms.WorldMatrixComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.UI.UIComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.CommandGroupComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.DamageTookComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.DamageTookEvent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.IsCommandGroupDirty>.Validate(isTag: true);
            StaticTypes<ME.BECS.Units.IsUnitStaticComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Units.NavAgentComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.NavAgentRuntimeComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.NavAgentRuntimeSpeedComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.PathFollowComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Units.SelectionGroupComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.TimeToBuildComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.UnitBelongsToComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.UnitCommandGroupComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.UnitHealthComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.UnitHoldComponent>.Validate(isTag: true);
            StaticTypes<ME.BECS.Units.UnitIsDeadTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.Units.UnitLookAtComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.UnitQuadSizeComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Units.UnitSelectionGroupComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Views.AssignViewComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Views.CameraComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Views.DrawMeshProviderTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.Views.EntityViewProviderTag>.Validate(isTag: true);
            StaticTypes<ME.BECS.Views.InstantiateAvatarViewComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Views.InstantiateViewComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Views.IsViewRequested>.Validate(isTag: true);
            StaticTypes<ME.BECS.Views.MeshFilterComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Views.MeshRendererComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Views.ViewComponent>.Validate(isTag: false);
            StaticTypes<ME.BECS.Views.ViewCustomIdComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Bullets.BulletComponent>.Validate(isTag: true);
            StaticTypes<SampleShooter.Components.Camera.CameraComponent>.Validate(isTag: true);
            StaticTypes<SampleShooter.Components.Camera.CameraFollowSpeedComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Camera.CameraPositionOffsetComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Camera.CameraRayComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Camera.CameraRotationOffsetComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Camera.CameraSmoothTimeComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Camera.CameraTypeComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Camera.CameraVelocityComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Input.InputComponent>.Validate(isTag: true);
            StaticTypes<SampleShooter.Components.Input.InputDirection>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Level.LevelComponent>.Validate(isTag: true);
            StaticTypes<SampleShooter.Components.Level.LevelEnemySpawnPointComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Level.LevelIdComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Level.LevelPlayerSpawnPointComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Level.LevelQuadTreeComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Level.LevelQuadTreeIndexComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Level.LevelSpawnPointComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Player.PlayerCanShootComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Player.PlayerMoveDirectionComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Player.PlayerMoveSpeedComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Player.PlayerMuzzlePositionComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Player.PlayerQuadTreeComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Player.PlayerShootingRangeComponent>.Validate(isTag: false);
            StaticTypes<SampleShooter.Components.Player.PlayersQuadTreeIndexComponent>.Validate(isTag: false);
            StaticTypesDestroy<ME.BECS.Pathfinding.GraphMaskRuntimeComponent>.RegisterAutoDestroy(isTag: false);
            StaticTypes<ME.BECS.Bullets.BulletEffectOnDestroy>.ValidateStatic(isTag: false);
            StaticTypes<ME.BECS.Bullets.BulletViewPoint>.ValidateStatic(isTag: false);
            StaticTypes<ME.BECS.Units.UnitEffectOnDestroyComponent>.ValidateStatic(isTag: false);
            StaticTypes<ME.BECS.Units.UnitEffectOnHitComponent>.ValidateStatic(isTag: false);
            StaticTypes<ME.BECS.Views.InstantiateAvatarViewComponent>.ValidateStatic(isTag: false);
            StaticTypes<ME.BECS.Views.InstantiateViewComponent>.ValidateStatic(isTag: false);
            StaticTypes<ME.BECS.Attack.AttackComponent>.ValidateStatic(isTag: false);
            StaticTypes<ME.BECS.Pathfinding.GraphMaskComponent>.ValidateStatic(isTag: false);
            StaticTypes<ME.BECS.Views.InstantiateAvatarViewComponent>.ValidateStatic(isTag: false);
            StaticTypes<ME.BECS.Views.InstantiateViewComponent>.ValidateStatic(isTag: false);
            #if ENABLE_UNITY_COLLECTIONS_CHECKS && ENABLE_BECS_COLLECTIONS_CHECKS
            StaticMethods.InitializeJobsDebug();
            #endif
            StaticTypes.collectionsCount.Resize(StaticTypes.counter + 1u);
        }
    }
    [UnityEngine.Scripting.PreserveAttribute]
    [UnityEngine.DefaultExecutionOrder(-100_000)]
    [BURST]
    public static unsafe class StaticMethods {
        [UnityEngine.Scripting.PreserveAttribute]
        public static void Load() {
            Worlds.Initialize();
            SystemsStatic.Initialize();
            StaticTypesInitializer.Load();
            GlobalEvents.Initialize();
            CustomModules.InvokeResetPass();
            WorldStaticCallbacks.RegisterCallback<ME.BECS.Network.UnsafeNetworkModule.MethodsStorage>(NetworkLoad);
            WorldStaticCallbacks.RegisterCallback<World>(AspectsConstruct);
            WorldStaticCallbacks.RegisterCallback<ME.BECS.Views.ViewsModuleData>(ViewsLoad);
            EntityConfigRegistry.Initialize();
            EntityConfigsRegistry.Initialize(true);
            CustomModules.InvokeFirstPass();
            CustomModules.InvokeSecondPass();
        }
        #if ENABLE_UNITY_COLLECTIONS_CHECKS && ENABLE_BECS_COLLECTIONS_CHECKS
        #endif
        
        #if ENABLE_UNITY_COLLECTIONS_CHECKS && ENABLE_BECS_COLLECTIONS_CHECKS
        #endif
        
        #if ENABLE_UNITY_COLLECTIONS_CHECKS && ENABLE_BECS_COLLECTIONS_CHECKS
        #endif
        
        #if ENABLE_UNITY_COLLECTIONS_CHECKS && ENABLE_BECS_COLLECTIONS_CHECKS
        public static void InitializeJobsDebug() {
        }
        #endif
        
        
        
        
        public static unsafe void NetworkLoad(ref ME.BECS.Network.UnsafeNetworkModule.MethodsStorage methods) {
        }
        public static unsafe void AspectsConstruct(ref World world) {
        }
        public static unsafe void ViewsLoad(ref ME.BECS.Views.ViewsModuleData viewsModule) {
        }
    }
}
